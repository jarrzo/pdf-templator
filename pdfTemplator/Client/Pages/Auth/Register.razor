@page "/register"
@using pdfTemplator.Client.Services.Identity
@using pdfTemplator.Shared;
@using pdfTemplator.Shared.Constants
@using pdfTemplator.Shared.Models
@inject IdentityAuthenticationStateProvider authStateProvider
@inject Microsoft.Extensions.Localization.IStringLocalizer<Register> _localizer

<PageTitle>Register</PageTitle>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerParameters">
    <MudGrid>
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudIcon Icon="@CustomIcons.Pdf" Color="Color.Primary" Size="Size.Large" ViewBox="0 0 500 500" Style="width: 100px; height: 100px;" />
            </div>
        </MudItem>

        <DataAnnotationsValidator />

        <MudItem xs="12">
            <MudTextField Label="@_localizer["Username"]" T="string" @bind-Value="registerParameters.UserName" Variant="Variant.Outlined" For="@(() => registerParameters.UserName)" />
        </MudItem>

        <MudItem xs="12">
            <MudTextField Label="@_localizer["Password"]" InputType="InputType.Password" Variant="Variant.Outlined" @bind-Value="registerParameters.Password" For="@(() => registerParameters.Password)" />
        </MudItem>

        <MudItem xs="12">
            <MudTextField Label="@_localizer["Confirm Password"]" InputType="InputType.Password" Variant="Variant.Outlined" @bind-Value="registerParameters.PasswordConfirm" For="@(() => registerParameters.PasswordConfirm)" />
        </MudItem>

        <MudItem xs="12" Class="d-flex justify-center">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Style="width: 100%;">@_localizer["Register"]</MudButton>
        </MudItem>

        <MudItem xs="12" Class="d-flex justify-center">
            <MudButton ButtonType="ButtonType.Button" Href="/login" Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Large" Style="width: 100%;">@_localizer["Login"]</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>

@functions {

    RegisterParameters registerParameters { get; set; } = new RegisterParameters();

    async Task OnSubmit()
    {
        try
        {
            await authStateProvider.Register(registerParameters);
            _navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            _snackBar.Add(ex.Message, Severity.Error);
        }
    }
}